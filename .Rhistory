group_by(ensembl_transcript_id) %>%
summarize(n_sites = n()) %>%
ungroup()
View(my_data)
View(sites_per_tx)
View(tx_per_gene)
tx_per_gene <- tx_per_gene %>%
group_by(ensembl_transcript_id) %>%
summarize(n_tx = n()) # summarize per number of transcripts
View(tx_per_gene)
tx_per_gene <- my_data %>%
group_by(ensembl_gene_name, ensembl_transcript_id) %>%
summarize(n_sites = n()
View(tx_per_gene)
tx_per_gene <- my_data %>%
group_by(ensembl_gene_name, ensembl_transcript_id) %>%
summarize(n_sites = n())
tx_per_gene <- tx_per_gene %>%
group_by(ensembl_gene_name) %>%
summarize(n_tx = n())
biotype <- my_data %>%
dplyr::distinct(gene_biotype) %>%
nrow()
devtools::load_all()
summarize_m6anet_output(data.site.proba_df = my_data, output_file = "qc_test_report.html")
head(my_data)
summarize_m6anet_output(data.site.proba_df = my_data, output_file = "qc_test_report.html")
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
devtools::load_all()
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
devtools::load_all()
devtools::load_all()
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
devtools::load_all()
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
devtools::load_all()
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
devtools::load_all()
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
devtools::load_all()
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
library(RColorBrewer)
install.packages('ghibli')
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
library(ghibli)
# Color Palette
colors <- ghibli::ghibli_palettes$LaputaMedium
library(RColorBrewer)
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
View(sites_per_tx)
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
summarize_m6anet_output(data.site_proba_df = my_data, output_file = "qc_test_report.html")
usethis::use_r("calculate_chromosome_location")
my_data_filt <- my_data %>%
filter(probability_modified >=.9)
chr_summary <- calculate_chromosome_location(
data.site_proba_df = my_data_filt,
output_csv = "chr_location_summary.csv",
output_plot = "chr_location_distribution.png"
)
devtools::load_all()
chr_summary <- calculate_chromosome_location(
data.site_proba_df = my_data_filt,
output_csv = "chr_location_summary.csv",
output_plot = "chr_location_distribution.png"
)
View(chr_summary)
result <- calculate_chromosome_location(
data.site_proba_df = my_data_filt,
output_csv = "chromosome_summary.csv",
output_plot = "chromosome_plot.png"
)
View(result)
result <- calculate_chromosome_location(
data.site_proba_df = my_data_filt,
output_csv = "chromosome_summary.csv",
output_plot = "chromosome_plot.png"
)
View(result)
result <- calculate_chromosome_location(
data.site_proba_df = my_data_filt,
output_csv = "chromosome_summary.csv",
output_plot = "chromosome_plot.png"
)
devtools::load_all()
result <- calculate_chromosome_location(
data.site_proba_df = my_data_filt,
output_csv = "chromosome_summary.csv",
output_plot = "chromosome_plot.png"
)
View(result)
result <- calculate_chromosome_location(
data.site_proba_df = my_data_filt,
output_csv = "chromosome_summary.csv",
output_plot = "chromosome_plot.pdf"
)
usethis::use_r("filter_m6a_sites")
devtools::load_all()
my_data_filt <- filter_m6a_sites(my_data)
my_data_filt <- filter_m6a_sites(my_data, 0.8)
my_data_filt <- filter_m6a_sites(my_data, 0.9)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
test_tx_regions <- get_transcript_region_lengths("/Users/hannalee2002/references/gencode/v45/gencode.v45.chr_patch_hapl_scaff.annotation.gtf")
library(txdbmaker)
# Build TxDb from GTF
txdb <- makeTxDbFromGFF("/Users/hannalee2002/references/gencode/v45/gencode.v45.chr_patch_hapl_scaff.annotation.gtf", format = "gtf")
# Get CDS
cds_gr <- cdsBy(txdb, by = "tx", use.names = TRUE)
cds_df <- as.data.frame(cds_gr) %>%
group_by(group_name) %>%
summarise(cds_length_tx = sum(width), .groups = "drop") %>%
rename(transcript = group_name)
cds_df <- as.data.frame(cds_gr)
View(cds_df)
cds_df <- cds_df %>%
group_by(group_name) %>%
summarise(cds_length_tx = sum(width), .groups = "drop") %>%
rename(transcript = group_name)
cds_df <- as.data.frame(cds_gr)
cds_df <- cds_df %>%
group_by(group_name) %>%
summarise(cds_length_tx = sum(width), .groups = "drop") %>%
rename(transcript = group_name)
colnames(cds_df)
cds_df <- cds_df %>%
dplyr::group_by(group_name) %>%
dplyr::summarise(cds_length_tx = sum(width), .groups = "drop") %>%
dplyr::rename(transcript = group_name)
# Get 5' UTR
utr5_gr <- fiveUTRsByTranscript(txdb, use.names = TRUE)
utr5_df <- as.data.frame(utr5_gr) %>%
dplyr::group_by(group_name) %>%
dplyr::summarise(utr5_length = sum(width), .groups = "drop") %>%
dplyr::rename(transcript = group_name)
View(utr5_df)
utr3_gr <- threeUTRsByTranscript(txdb, use.names = TRUE)
utr3_df <- as.data.frame(utr3_gr) %>%
dplyr::group_by(group_name) %>%
dplyr::summarise(utr3_length = sum(width), .groups = "drop") %>%
dplyr::rename(transcript = group_name)
source("~/.active-rstudio-document", echo=TRUE)
tx_regions <- full_join(utr5_df, utr3_df, by = "transcript") %>%
full_join(cds_df, by = "transcript") %>%
mutate(across(c(utr5_length, utr3_length, cds_length_tx), ~replace_na(., 0)))
# Merge all
tx_regions <- dplyr::full_join(utr5_df, utr3_df, by = "transcript") %>%
dplyr::full_join(cds_df, by = "transcript") %>%
dplyr::mutate(across(c(utr5_length, utr3_length, cds_length_tx), ~replace_na(., 0)))
# Merge all
tx_regions <- dplyr::full_join(utr5_df, utr3_df, by = "transcript") %>%
dplyr::full_join(cds_df, by = "transcript") %>%
dplyr::mutate(across(c(utr5_length, utr3_length, cds_length_tx), ~tidyr::replace_na(., 0)))
View(tx_regions)
# Add region positions (start/end)
tx_regions <- tx_regions %>%
mutate(
start_utr5 = ifelse(utr5_length == 0, NA, 1),
end_utr5 = ifelse(utr5_length == 0, NA, utr5_length),
start_cds = ifelse(cds_length_tx == 0, NA, ifelse(utr5_length == 0, 1, utr5_length + 1)),
end_cds = ifelse(cds_length_tx == 0, NA, ifelse(utr5_length == 0, cds_length_tx, utr5_length + cds_length_tx - 1)),
start_utr3 = ifelse(utr3_length == 0, NA, ifelse(is.na(end_cds), 1, end_cds + 1)),
end_utr3 = ifelse(utr3_length == 0, NA, ifelse(is.na(end_cds), utr3_length, end_cds + utr3_length))
)
1031-401
630-543
89+543
# Add region positions (start/end)
tx_regions_df <- tx_regions_df %>%
mutate(
# 5' UTR: If utr5_length is NA, start and end are NA, else start at 1 and end at utr5_length
start_utr5 = ifelse(is.na(utr5_length), NA, 1),
end_utr5 = ifelse(is.na(utr5_length), NA, utr5_length),
# CDS: If cds_length_tx is NA, CDS_start and CDS_end are NA
# Otherwise, CDS_start depends on whether utr5_length is NA
start_cds = ifelse(is.na(cds_length_tx), NA, ifelse(is.na(utr5_length), 1, utr5_length + 1)),
end_cds = ifelse(is.na(cds_length_tx), NA, ifelse(is.na(utr5_length), cds_length_tx, utr5_length + cds_length_tx - 1)),
# 3' UTR: If utr3_length is NA, start and end are NA
# Otherwise, start_utr3 depends on whether CDS_end is NA
start_utr3 = ifelse(is.na(utr3_length), NA, ifelse(is.na(end_cds), 1, end_cds + 1)),
end_utr3 = ifelse(is.na(utr3_length), NA, ifelse(is.na(end_cds), utr3_length, end_cds + utr3_length))
)
# Add region positions (start/end)
tx_regions <- tx_regions %>%
mutate(
# 5' UTR: If utr5_length is NA, start and end are NA, else start at 1 and end at utr5_length
start_utr5 = ifelse(is.na(utr5_length), NA, 1),
end_utr5 = ifelse(is.na(utr5_length), NA, utr5_length),
# CDS: If cds_length_tx is NA, CDS_start and CDS_end are NA
# Otherwise, CDS_start depends on whether utr5_length is NA
start_cds = ifelse(is.na(cds_length_tx), NA, ifelse(is.na(utr5_length), 1, utr5_length + 1)),
end_cds = ifelse(is.na(cds_length_tx), NA, ifelse(is.na(utr5_length), cds_length_tx, utr5_length + cds_length_tx - 1)),
# 3' UTR: If utr3_length is NA, start and end are NA
# Otherwise, start_utr3 depends on whether CDS_end is NA
start_utr3 = ifelse(is.na(utr3_length), NA, ifelse(is.na(end_cds), 1, end_cds + 1)),
end_utr3 = ifelse(is.na(utr3_length), NA, ifelse(is.na(end_cds), utr3_length, end_cds + utr3_length))
)
get_transcript_region_lengths <- function(gtf_path) {
# Build TxDb from GTF
txdb <- makeTxDbFromGFF(gtf_path, format = "gtf")
# Get CDS
cds_gr <- cdsBy(txdb, by = "tx", use.names = TRUE)
cds_df <- as.data.frame(cds_gr) %>%
dplyr::group_by(group_name) %>%
dplyr::summarise(cds_length_tx = sum(width), .groups = "drop") %>%
dplyr::rename(transcript = group_name)
# Get 5' UTR
utr5_gr <- fiveUTRsByTranscript(txdb, use.names = TRUE)
utr5_df <- as.data.frame(utr5_gr) %>%
dplyr::group_by(group_name) %>%
dplyr::summarise(utr5_length = sum(width), .groups = "drop") %>%
dplyr::rename(transcript = group_name)
# Get 3' UTR
utr3_gr <- threeUTRsByTranscript(txdb, use.names = TRUE)
utr3_df <- as.data.frame(utr3_gr) %>%
dplyr::group_by(group_name) %>%
dplyr::summarise(utr3_length = sum(width), .groups = "drop") %>%
dplyr::rename(transcript = group_name)
# Merge all
tx_regions <- dplyr::full_join(utr5_df, utr3_df, by = "transcript") %>%
dplyr::full_join(cds_df, by = "transcript") %>%
dplyr::mutate(across(c(utr5_length, utr3_length, cds_length_tx), ~tidyr::replace_na(., 0)))
# Add region positions (start/end)
tx_regions <- tx_regions %>%
mutate(
# 5' UTR: If utr5_length is NA, start and end are NA, else start at 1 and end at utr5_length
start_utr5 = ifelse(is.na(utr5_length), NA, 1),
end_utr5 = ifelse(is.na(utr5_length), NA, utr5_length),
# CDS: If cds_length_tx is NA, CDS_start and CDS_end are NA
# Otherwise, CDS_start depends on whether utr5_length is NA
start_cds = ifelse(is.na(cds_length_tx), NA, ifelse(is.na(utr5_length), 1, utr5_length + 1)),
end_cds = ifelse(is.na(cds_length_tx), NA, ifelse(is.na(utr5_length), cds_length_tx, utr5_length + cds_length_tx - 1)),
# 3' UTR: If utr3_length is NA, start and end are NA
# Otherwise, start_utr3 depends on whether CDS_end is NA
start_utr3 = ifelse(is.na(utr3_length), NA, ifelse(is.na(end_cds), 1, end_cds + 1)),
end_utr3 = ifelse(is.na(utr3_length), NA, ifelse(is.na(end_cds), utr3_length, end_cds + utr3_length))
)
return(tx_regions)
}
test_tx_regions <- get_transcript_region_lengths("/Users/hannalee2002/references/gencode/v45/gencode.v45.chr_patch_hapl_scaff.annotation.gtf")
View(test_tx_regions)
usethis::use_r("get_transcript_region_lengths")
usethis::use_r("map_relative_tx_regions_to_m6a")
devtools::load_all()
summarize_m6anet_output(my_data)
usethis::use_r("plot_relative_positions")
devtools::load_all()
tx_regions <- get_transcript_region_lengths('/Users/hannalee2002/references/gencode/v45/gencode.v45.chr_patch_hapl_scaff.annotation.gtf')
View(tx_regions)
View(my_data)
devtools::load_all()
rel_regions <- map_relative_tx_regions_to_m6A(my_data_filt, tx_regions)
rel_regions <- map_relative_tx_regions_to_m6A(my_data_filt, tx_regions)
devtools::load_all()
rel_regions <- map_relative_tx_regions_to_m6A(my_data_filt, tx_regions)
devtools::load_all()
rel_regions <- map_relative_tx_regions_to_m6A(my_data_filt, tx_regions)
View(tx_regions)
View(test_tx_regions)
View(rel_regions)
colnames(tx_regions)
devtools::load_all()
rel_regions_v2 <- map_relative_tx_regions_to_m6A(my_data_filt, tx_regions)
devtools::load_all()
rel_regions_v2 <- map_relative_tx_regions_to_m6A(my_data_filt, tx_regions)
devtools::load_all()
rel_regions_v2 <- map_relative_tx_regions_to_m6A(my_data_filt, tx_regions)
devtools::load_all()
rel_regions_v2 <- map_relative_tx_regions_to_m6A(my_data_filt, tx_regions)
devtools::load_all()
rel_regions_v2 <- map_relative_tx_regions_to_m6A(my_data_filt, tx_regions)
View(rel_regions_v2)
id_17038_filt <- read.csv("/Users/hannalee2002/M6A_Glioma/M6A_POOLED/data_tables/greater0.9_tables/pooled_17038_filtered.csv")
rel_regions_17038 <- map_relative_tx_regions_to_m6A(id_17038_filt, tx_regions)
View(rel_regions_17038)
colnames(rel_regions_17038)
devtools::load_all()
rel_regions_17038 <- map_relative_tx_regions_to_m6A(id_17038_filt, tx_regions)
colnames(rel_regions_17038)
plot_rel_positions(rel_regions_17038)
plot_rel_positions(rel_regions_17038)
plot_rel_positions(rel_regions_17038)
plot_rel_positions(rel_regions_17038)
p<-plot_rel_positions(rel_regions_17038)
ggsave("test_plot", p)
ggsave("test_plot.pdf", p)
plot_rel_positions(rel_regions_17038)
plot_rel_positions(rel_regions_17038)
plot_rel_positions(rel_regions_17038)
plot_rel_positions(rel_regions_17038)
plot_rel_positions(rel_regions_17038)
devtools::load_all()
plot_rel_positions(rel_regions_17038)
devtools::load_all()
plot_rel_positions(rel_regions_17038)
devtools::load_all()
devtools::load_all()
plot_rel_positions(rel_regions_17038)
devtools::load_all()
plot_rel_positions(rel_regions_17038)
devtools::load_all()
plot_rel_positions(rel_regions_17038)
devtools::load_all()
plot_rel_positions(rel_regions_17038)
plot_rel_positions(rel_regions_17038)
plot_rel_positions(rel_regions_17038)
devtools::load_all()
plot_rel_positions(rel_regions_17038)
devtools::load_all()
plot_rel_positions(rel_regions_17038)
devtools::load_all()
plot_rel_positions(rel_regions_17038)
devtools::load_all()
plot_rel_positions(rel_regions_17038)
devtools::load_all()
plot_rel_positions(rel_regions_17038, "17038")
devtools::load_all()
plot_rel_positions(rel_regions_17038, "17038")
devtools::load_all()
plot_rel_positions(rel_regions_17038, "17038")
devtools::load_all()
plot_rel_positions(rel_regions_17038, "17038")
devtools::load_all()
plot_rel_positions(rel_regions_17038, "17038")
dens <- density(plot_df$rel_position)
max_density <- max(dens$y)
devtools::load_all()
dens <- density(plot_df$rel_position)
max_density <- max(dens$y)
plot_rel_positions(rel_regions_17038, "17038")
devtools::load_all()
plot_rel_positions(rel_regions_17038, "17038")
devtools::load_all()
plot_rel_positions(rel_regions_17038, "17038")
usethis::use_r("compare_m6a_distribution")
usethis::use_r("calculate_weighted_mod_ratio")
usethis::use_r("weighted_mod_comparison")
usethis::use_r("weighted_mod_ratio_and_DEG")
pooled_17017 <- read.csv("/Users/hannalee2002/M6A_Glioma/M6A_POOLED/data_tables/greater0.9_tables/pooled_17017_filtered_copy.csv")
pooled_18015 <- read.csv("/Users/hannalee2002/M6A_Glioma/M6A_POOLED/data_tables/greater0.9_tables/pooled_18015_filtered_copy.csv")
pooled_18015 <- read.csv("/Users/hannalee2002/M6A_Glioma/M6A_POOLED/data_tables/greater0.9_tables/pooled_18015_filtered.csv")
pooled_20021 <- read.csv("/Users/hannalee2002/M6A_Glioma/M6A_POOLED/data_tables/greater0.9_tables/pooled_20021_filtered.csv")
devtools::load_all()
gene_list <- list(
pooled_17017 = unique(pooled_17017$ensembl_gene_name),
pooled_18015 = unique(pooled_18015$ensembl_gene_name)
)
comparison_output <- compare_m6a_distribution(gene_list)
View(comparison_output)
gene_list <- list(
pooled_17017 = unique(pooled_17017$ensembl_gene_name),
pooled_18015 = unique(pooled_18015$ensembl_gene_name),
pooled_20021 =  unique(pooled_20021$ensembl_gene_name)
)
comparison_output <- compare_m6a_distribution(gene_list)
View(comparison_output)
usethis::use_testthat(3)
usethis::use_test("compare_m6a_distribution")
devtools::test()
devtools::test()
devtools::test()
devtools::load_all()
devtools::test()
devtools::load_all()
devtools::test()
colnames(pooled_17017)
devtools::load_all()
summarize_m6anet_output(pooled_17017)
library(m6ASeqTools)
devtools::document()
pooled_alk <- read.csv('/Users/hannalee2002/cell-lines-project/cell_lines_m6anet_output/RNA_cell_alk_all/data.site_proba.csv')
pooled_mettl <- read.csv('/Users/hannalee2002/cell-lines-project/cell_lines_m6anet_output/RNA_cell_mettl3_all/data.site_proba.csv')
pooled_naive <- read.csv('/Users/hannalee2002/cell-lines-project/cell_lines_m6anet_output/pooled_naive_hl/data.site_proba.csv')
pooled_igf <- read.csv('/Users/hannalee2002/cell-lines-project/cell_lines_m6anet_output/RNA_cell_igf_all/data.site_proba.csv')
View(pooled_alk)
usethis::use_r(fix_m6anet_columns)
usethis::use_r("fix_m6anet_columns")
colnames(pooled_17017)
colnames(pooled_alk)
devtools::load_all()
devtools::document()
source("~/Packages/m6ASeqTools/R/map_relative_tx_regions_to_m6a.R", echo=TRUE)
devtools::document()
library(m6ASeqTools)
# Fix columns of m6anet output
pooled_alk <- separate_transcript_id(pooled_alk)
# Load pooled data files
pooled_alk <- read.csv('/Users/hannalee2002/cell-lines-project/cell_lines_m6anet_output/RNA_cell_alk_all/data.site_proba.csv')
rm(list=ls())
# Load pooled data files
pooled_alk <- read.csv('/Users/hannalee2002/cell-lines-project/cell_lines_m6anet_output/RNA_cell_alk_all/data.site_proba.csv')
# Fix columns of m6anet output
pooled_alk <- separate_transcript_id(pooled_alk)
library(m6ASeqTools)
devtools::load_all()
# Fix columns of m6anet output
pooled_alk <- separate_transcript_id(pooled_alk)
View(pooled_alk)
summarize_m6anet_output(pooled_alk)
pooled_alk <- read.csv('/Users/hannalee2002/cell-lines-project/cell_lines_m6anet_output/RNA_cell_alk_all/data.site_proba.csv')
pooled_mettl <- read.csv('/Users/hannalee2002/cell-lines-project/cell_lines_m6anet_output/RNA_cell_mettl3_all/data.site_proba.csv')
pooled_naive <- read.csv('/Users/hannalee2002/cell-lines-project/cell_lines_m6anet_output/pooled_naive_hl/data.site_proba.csv')
pooled_igf <- read.csv('/Users/hannalee2002/cell-lines-project/cell_lines_m6anet_output/RNA_cell_igf_all/data.site_proba.csv')
summarize_m6anet_output(pooled_alk, "pooled_alk_m6a_summary.html")
devtools::load_all()
summarize_m6anet_output(pooled_alk, "pooled_alk_m6a_summary.html")
summarize_m6anet_output(pooled_mettl, "pooled_mettl_m6a_summary.html")
summarize_m6anet_output(pooled_naive, "pooled_naive_m6a_summary.html")
summarize_m6anet_output(pooled_igf, "pooled_igf_m6a_summary.html")
devtools::load_all()
source("~/.active-rstudio-document", echo=TRUE)
devtools::load_all()
source("~/.active-rstudio-document", echo=TRUE)
filt_pooled_alk <- filter_m6a_sites(pooled_alk)
filt_pooled_mettl <- filter_m6a_sites(pooled_mettl)
filt_pooled_naive <- filter_m6a_sites(pooled_naive)
filt_pooled_igf <- filter_m6a_sites(pooled_igf)
# Calculate chromosome location
filt_pooled_alk <- calculate_chromosome_location(filt_pooled_alk,
output_csv = "/Users/hannalee2002/cell-lines-project/alkb_chr_locations_summary.csv",
output_plot = "/Users/hannalee2002/cell-lines-project/alkb_chr_locations.pdf")
View(filt_pooled_alk)
filt_pooled_mettl <- calculate_chromosome_location(filt_pooled_mettl,
output_csv = "/Users/hannalee2002/cell-lines-project/mettl_chr_locations_summary.csv",
output_plot = "/Users/hannalee2002/cell-lines-project/mettl_chr_locations.pdf")
filt_pooled_naive <- calculate_chromosome_location(filt_pooled_naive,
output_csv = "/Users/hannalee2002/cell-lines-project/naive_chr_locations_summary.csv",
output_plot = "/Users/hannalee2002/cell-lines-project/naive_chr_locations.pdf")
filt_pooled_igf <- calculate_chromosome_location(filt_pooled_igf,
output_csv = "/Users/hannalee2002/cell-lines-project/igf_chr_locations_summary.csv",
output_plot = "/Users/hannalee2002/cell-lines-project/igf_chr_locations.pdf")
View(filt_pooled_igf)
# filter for high confidence sites
filt_pooled_alk <- filter_m6a_sites(pooled_alk)
filt_pooled_mettl <- filter_m6a_sites(pooled_mettl)
filt_pooled_naive <- filter_m6a_sites(pooled_naive)
filt_pooled_igf <- filter_m6a_sites(pooled_igf)
# Step 1: Get annotate transcript lengths (from ensembl annotations)
gtf_path <- '/Users/hannalee2002/references/gencode/v45/gencode.v45.chr_patch_hapl_scaff.annotation.gtf'
tx_df <- get_transcript_lengths(gtf_path)
tx_df <- get_transcript_region_lengths(gtf_path)
# Step 2: Obtain df with transcript region annotations
alk_tx_regions <- map_relative_tx_regions_to_m6A(df=filt_pooled_alk, df_transcript_lengths = tx_df)
View(alk_tx_regions)
mettl_tx_regions <- map_relative_tx_regions_to_m6A(df=filt_pooled_mettl, df_transcript_lengths = tx_df)
naive_tx_regions <- map_relative_tx_regions_to_m6A(df=filt_pooled_naive, df_transcript_lengths = tx_df)
igf_tx_regions <- map_relative_tx_regions_to_m6A(df=filt_pooled_igf, df_transcript_lengths = tx_df)
# Step 3: Plot regions
plot_rel_positions(alk_tx_regions, label = "ALKB Knockdown")
p<- plot_rel_positions(alk_tx_regions, label = "ALKB Knockdown")
ggsave("alk_tx_region.pdf", p)
p<- plot_rel_positions(mettl_tx_regions, label = "METTL3 Knockdown")
ggsave("mettl_tx_region.pdf", p)
p<- plot_rel_positions(naive_tx_regions, label = "Naive")
ggsave("naive_tx_region.pdf", p)
p<- plot_rel_positions(alk_tx_regions, label = "ALKBH5 Knockdown")
ggsave("alk_tx_region.pdf", p)
p<- plot_rel_positions(igf_tx_regions, label = "IGF2BP2 Knockdown")
ggsave("igf_tx_region.pdf", p)
write.csv(alk_tx_regions, "alk_tx_regions.csv")
write.csv(mettl_tx_regions, "mettl_tx_regions.csv")
write.csv(naive_tx_regions, "naive_tx_regions.csv")
write.csv(igf_tx_regions, "igf_tx_regions.csv")
# Compare common and unique sites, transcripts and genes
site_list <- list(
alk=unique(paste(filt_pooled_alk$ensembl_transcript_id, filt_pooled_alk$transcript_position, sep="_")),
mettl=unique(paste(filt_pooled_mettl$ensembl_transcript_id, filt_pooled_mettl$transcript_position, sep="_")),
naive=unique(paste(filt_pooled_naive$ensembl_transcript_id, filt_pooled_naive$transcript_position, sep="_")),
igf=unique(paste(filt_pooled_igf$ensembl_transcript_id, filt_pooled_igf$transcript_position, sep="_"))
)
tx_list <- list(
alk=unique(filt_pooled_alk$ensembl_transcript_id),
mettl=unique(filt_pooled_mettl$ensembl_transcript_id),
naive=unique(filt_pooled_naive$ensembl_transcript_id),
igf=unique(filt_pooled_igf$ensembl_transcript_id)
)
tx_list <- list(
alk=unique(filt_pooled_alk$ensembl_transcript_name),
mettl=unique(filt_pooled_mettl$ensembl_transcript_name),
naive=unique(filt_pooled_naive$ensembl_transcript_name),
igf=unique(filt_pooled_igf$ensembl_transcript_name)
)
gene_list <- list(
alk=unique(filt_pooled_alk$ensembl_gene_name),
mettl=unique(filt_pooled_mettl$ensembl_gene_name),
naive=unique(filt_pooled_naive$ensembl_gene_name),
igf=unique(filt_pooled_igf$ensembl_gene_name)
)
site_dist_across_groups <- compare_m6a_distribution(site_list)
View(site_dist_across_groups)
tx_dist_across_groups <- compare_m6a_distribution(tx_list)
gene_dist_across_groups <- compare_m6a_distribution(gene_list)
View(tx_dist_across_groups)
View(gene_dist_across_groups)
gene_dist_across_groups[["unique_alk"]]
View(pooled_igf)
View(filt_pooled_alk)
View(filt_pooled_igf)
write.csv(site_dist_across_groups, "m6a_common_and_unique_sites.csv")
comparison <- site_dist_across_groups[1]
View(comparison)
str(site_dist_across_groups)
